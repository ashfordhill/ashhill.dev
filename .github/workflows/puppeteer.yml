name: Screenshot and generate video
description: Take screenshots and generate a video of the Next.js app using Puppeteer

on: [push, pull_request]

jobs:
  screenshot:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ash-portfolio/package-lock.json
      
      - name: Install dependencies
        working-directory: ./ash-portfolio
        run: |
          npm install
            
      - name: Build Next.js app
        working-directory: ./ash-portfolio
        run: npm run build

      - name: Start Next.js app
        working-directory: ./ash-portfolio
        run: npm run start &

      - name: Take visual records of current app
        uses: ashfordhill/puppeteer-action@main
        with:
          url: 'http://localhost:3000'
          folder: 'timeline'
          basename: 'screenshot'
          make_video: 'true'
          video_name: timeline.mp4
          frame_duration: '1'
          scale_width: '640'

      - name: Upload .mp4 to user-images and update README
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VIDEO_PATH: timeline/timeline.mp4
          ISSUE_NUMBER: 1  # <-- create a scratch issue in your repo and set this
        run: |
          set -e

          echo "Uploading video to user-images..."
          # Step 1: Upload as if dragged into an issue comment
          RESPONSE=$(curl -s \
            -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -F "name=$(basename $VIDEO_PATH)" \
            -F "file=@$VIDEO_PATH" \
            "https://uploads.github.com/repos/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER}/comments")

          # Step 2: Extract the CDN URL
          VIDEO_URL=$(echo "$RESPONSE" | grep -Eo 'https://user-images.githubusercontent.com[^)"]+')

          if [ -z "$VIDEO_URL" ]; then
            echo "❌ Failed to extract user-images URL"
            echo "$RESPONSE"
            exit 1
          fi

          echo "✅ Video uploaded: $VIDEO_URL"

          # Step 3: Update README.md placeholder only if changed
          README_FILE="README.md"
          if grep -q "$VIDEO_URL" "$README_FILE"; then
            echo "No change in video URL, skipping commit."
            exit 0
          fi

          sed -i "s|<!--VIDEO-->.*<!--/VIDEO-->|<!--VIDEO--><video src=\"$VIDEO_URL\" controls></video><!--/VIDEO-->|" "$README_FILE"


      - name: Commit screenshot
        working-directory: ./ash-portfolio
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add -A
          git commit -m "[ACTION] Update timeline"
          git push origin HEAD:${{ github.ref }}
